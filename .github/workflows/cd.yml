name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Ensure ECS Cluster Exists
        run: |
          if ! aws ecs describe-clusters --clusters xgboost-ecr --query 'clusters[?clusterName==`xgboost-ecr`]' | grep xgboost-ecr; then
            aws ecs create-cluster --cluster-name xgboost-ecr
          fi

      - name: Ensure ECS Service Exists
        run: |
          if ! aws ecs describe-services --cluster xgboost-ecr --services bankloan-model-service --query 'services[?serviceName==`bankloan-model-service`]' | grep bankloan-model-service; then
            aws ecs create-service \
              --cluster xgboost-ecr \
              --service-name bankloan-model-service \
              --task-definition ${{ secrets.TASK_DEFINITION_NAME }} \
              --desired-count 1 \
              --launch-type FARGATE \
              --network-configuration 'awsvpcConfiguration={subnets=["${{ secrets.SUBNET_ID }}"],securityGroups=["${{ secrets.SECURITY_GROUP_ID }}"],assignPublicIp="ENABLED"}'
          fi

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./bankloan-task-definition.json
          container-name: bankloan-model-api
          image: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPO }}:latest

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: bankloan-model-service
          cluster: xgboost-ecr
          wait-for-service-stability: true

      - name: Update Lambda Function
        run: |
          aws lambda update-function-code \
            --function-name bankloan-model-lambda \
            --image-uri ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPO }}:latest